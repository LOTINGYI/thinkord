{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./main/electron.ts","webpack:///./main/ipc/FileChannel.ts","webpack:///./main/utils/file.ts","webpack:///./node_modules/electron-is-dev/index.js","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"require('sequelize')\""],"names":[],"mappings":"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","file":"electron.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { app, BrowserWindow } from \"electron\";\nimport * as path from \"path\";\n// import db from \"./models/index\"\nimport { Sequelize } from 'sequelize';\nimport isDev from 'electron-is-dev'\n\nimport { IIpcChannel } from \"./ipc/IIpcChannel\";\nimport { FileChannel } from \"./ipc/FileChannel\";\n\nclass Main {\n    private win?: BrowserWindow | null\n\n    public async init(channel: IIpcChannel[]) {\n        const sequelize = new Sequelize({\n            dialect: 'sqlite',\n            storage: 'main/db.sqlite3'\n        })\n\n        app.on('ready', this.createWindow)\n        app.on('window-all-closed', this.onWindowAllClosed)\n        app.on('activate', this.onActivate)\n\n        try {\n            await sequelize.authenticate();\n            console.log('Connection has been established successfully.');\n        } catch (error) {\n            console.error('Unable to connect to the database:', error);\n        }\n        // db.sequelize\n        //     .sync({ force: true })\n        //     .then(() => {\n        //         db.Folder.create({ name: 'Martin' })\n        //             .then(() => {\n        //                 console.log('Folder created.')\n        //             })\n        //             .catch((error) => {\n        //                 console.error(error)\n        //             })\n        //         db.Folder.create({ name: 'Tim' })\n        //             .then(() => {\n        //                 console.log('Folder created.')\n        //             })\n        //             .catch((error) => {\n        //                 console.error(error)\n        //             })\n        //     })\n        //     .then(() => {\n        //         db.Collection.create({\n        //             name: 'test',\n        //             display: true,\n        //             folderId: 1\n        //         })\n        //             .then(() => {\n        //                 console.log('Collection created.')\n        //             })\n        //             .catch((error) => {\n        //                 console.error(error)\n        //             })\n        //     })\n        //     .then(() => {\n        //         db.Collection.create({\n        //             name: 'test',\n        //             display: true,\n        //             folderId: 2\n        //         })\n        //             .then(() => {\n        //                 console.log('Collection created.')\n        //             })\n        //             .catch((error) => {\n        //                 console.error(error)\n        //             })\n        //     })\n        //     .then(() => {\n        //         db.Block.create({\n        //             title: 'test',\n        //             type: 'image',\n        //             description: 'this is test image',\n        //             bookmark: true,\n        //             collectionId: 1\n        //         })\n        //             .then(() => {\n        //                 console.log('Block created.')\n        //             })\n        //             .catch((error) => {\n        //                 console.error(error)\n        //             })\n        //     })\n        //     .then(async () => {\n        //         let query = await db.Folder.findAll({\n        //             include: { all: true, nested: true }\n        //         })\n\n        //         console.log(JSON.stringify(query, null, 2))\n        //     })\n        //     .catch((error) => {\n        //         console.error('Unable to connect to the database:', error);\n        //     })\n    }\n\n    private onWindowAllClosed() {\n        if (process.platform !== 'darwin') {\n            app.quit();\n        }\n    }\n    private onActivate() {\n        if (!this.win) {\n            this.createWindow()\n        }\n    }\n\n    private createWindow() {\n        this.win = new BrowserWindow({\n            width: 800,\n            height: 600,\n            webPreferences: {\n                nodeIntegration: true,\n                // enableRemoteModule: true,\n                contextIsolation: true,\n                preload: path.resolve(__dirname, 'preload.js')\n            }\n        });\n\n        this.win.loadURL(isDev ? \"http://localhost:3000\" : `file://${path.join(__dirname, '../build/index.html')}`)\n        this.win.once('ready-to-show', () => {\n            if (this.win) this.win.show()\n        })\n        this.win.on('closed', () => {\n            this.win = null\n        })\n    }\n}\n\n(new Main()).init([\n    new FileChannel('fileprocess')\n])\n","import { ipcMain, IpcMainEvent } from \"electron\";\nimport { IIpcChannel } from \"./IIpcChannel\";\nimport { loadFile } from \"../utils/file\";\nexport class FileChannel implements IIpcChannel {\n    channelName\n\n    constructor(channelName: string) {\n        this.channelName = channelName\n        ipcMain.on(this.channelName, (event: IpcMainEvent, command: string, args: any) => {\n            switch (command) {\n                case 'save':\n                case 'delete':\n                case 'load':\n                    this[command](event, args)\n                    break;\n                default:\n                    console.log('There is no command in thic channel')\n                    break;\n            }\n        })\n    }\n\n    save(event: IpcMainEvent, args: any) {\n        console.log(args)\n        event.reply('fuck', 'u')\n    }\n\n    async load(event: IpcMainEvent, args: any) {\n        const data = await loadFile()\n        event.reply('loadComplete', data)\n    }\n\n    delete(event: IpcMainEvent, args: any) {\n        console.log(args)\n    }\n\n    // getName(): string {\n    //     throw new Error(\"Method not implemented.\");\n    // }\n    // setName(name: string) {\n    //     throw new Error(\"Method not implemented.\");\n    // }\n}","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport isDev from 'electron-is-dev'\n\nexport function loadFile(): Promise<string> {\n    return new Promise((resolve, reject) => {\n        let p = isDev ? `./public/real-dev-data.json` : path.join(__dirname, '../build/real-dev-data.json')\n        fs.readFile(p, function (err: NodeJS.ErrnoException | null, data: Buffer) {\n            if (err) {\n                reject(err)\n            } else {\n                resolve(data.toString())\n            }\n        })\n    })\n}","'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst app = electron.app || electron.remote.app;\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !app.isPackaged;\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require('sequelize');"],"sourceRoot":""}